---
# sync_secrets.yml - Managing the synchronization of secrets from pass to Vault

# Create or load the secrets tracking file
- name: Check if secrets tracking file exists
  ansible.builtin.stat:
    path: "{{ vault_tracked_secrets_file }}"
  register: tracked_secrets_stat

- name: Create tracking file if it doesn't exist
  ansible.builtin.file:
    path: "{{ vault_tracked_secrets_file }}"
    state: touch
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0600"
  when: not tracked_secrets_stat.stat.exists

- name: Load list of tracked secrets
  ansible.builtin.slurp:
    src: "{{ vault_tracked_secrets_file }}"
  register: synced_secrets_content
  when: tracked_secrets_stat.stat.exists

- name: Configure tracked secrets list
  ansible.builtin.set_fact:
    previously_synced_secrets: >-
      {{ (synced_secrets_content.content | b64decode).split('\n') |
         select('regex', '^.+$') | list
         if synced_secrets_content is defined and synced_secrets_content.content is defined
         else [] }}

- name: Debug raw list of loaded secrets
  ansible.builtin.debug:
    msg: "Raw list of loaded secrets: '{{ synced_secrets_content.content | b64decode }}'"
  when: synced_secrets_content is defined and synced_secrets_content.content is defined

- name: Debug previously synchronized secrets
  ansible.builtin.debug:
    msg: "Previously synchronized secrets: {{ previously_synced_secrets }}"

- name: Calculate format of current secrets
  ansible.builtin.set_fact:
    formatted_current_secrets: "{{ vault_secrets_to_sync | map('regex_replace', '/', '-') | list }}"

- name: Debug current secrets
  ansible.builtin.debug:
    msg: "Current configured secrets: {{ formatted_current_secrets }}"

# Process current secrets
- name: Process secrets from pass to Vault
  ansible.builtin.include_tasks: process_secret.yml
  loop: "{{ vault_secrets_to_sync }}"
  loop_control:
    loop_var: secret_path
  register: secrets_processed

# Get actual list of secrets from Vault using the CLI command
- name: List secrets using the Vault command
  ansible.builtin.command: vault list -format=json secret/metadata
  environment:
    VAULT_ADDR: "{{ vault_api_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: vault_list_output
  changed_when: false
  failed_when: false

- name: Debug raw output from Vault command
  ansible.builtin.debug:
    var: vault_list_output

- name: Extract list of Vault secrets from command
  ansible.builtin.set_fact:
    vault_current_secrets: "{{ vault_list_output.stdout | from_json }}"
  when: vault_list_output.rc == 0

- name: Set empty list if there are no secrets
  ansible.builtin.set_fact:
    vault_current_secrets: []
  when: vault_list_output.rc != 0

- name: Debug current list of secrets in Vault
  ansible.builtin.debug:
    var: vault_current_secrets

# Identify secrets to remove (which are in Vault but not in configuration)
- name: Identify secrets to remove
  ansible.builtin.set_fact:
    vault_removable_secrets: []

- name: Build list of secrets to remove
  ansible.builtin.set_fact:
    vault_removable_secrets: "{{ vault_removable_secrets + [item] }}"
  loop: "{{ vault_current_secrets }}"
  when: item not in formatted_current_secrets

- name: Debug secrets to be removed
  ansible.builtin.debug:
    var: vault_removable_secrets

# Remove secrets that are no longer in the list
- name: Remove unlisted secrets from Vault
  ansible.builtin.command: "vault delete secret/metadata/{{ item }}"
  environment:
    VAULT_ADDR: "{{ vault_api_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  loop: "{{ vault_removable_secrets }}"
  register: delete_result
  changed_when: true
  when: >-
    vault_remove_unlisted_secrets | bool and
    vault_removable_secrets | length > 0

- name: Debug removal result
  ansible.builtin.debug:
    msg: "Result of removing secret '{{ item.item }}': {{ item.stdout }}"
  loop: "{{ delete_result.results | default([]) }}"
  when: vault_remove_unlisted_secrets | bool and delete_result is defined and delete_result.results is defined

# Update the secrets tracking file
- name: Update tracked secrets list
  ansible.builtin.copy:
    content: "{{ formatted_current_secrets | join('\n') }}"
    dest: "{{ vault_tracked_secrets_file }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0600"
